#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrartcl
\begin_preamble
\usepackage{babel}

\usepackage{color}
%\usepackage{babel}
\usepackage{array}
\usepackage{longtable}
\usepackage{varioref}
\usepackage{float}
\usepackage{units}
\usepackage{textcomp}
\usepackage{amstext}
%\renewcommand{\nomname}{Nomenklatur}
%{\renewcommand{\abstractname}{Zusammenfassung}}
%{\renewcommand{\indexname}{Stichwortverzeichnis}}
\usepackage{multicol}
\widowpenalty=10000
\clubpenalty=10000
\raggedbottom
\usepackage{wrapfig}
\usepackage{enumitem}
\usepackage{scrtime}
\end_preamble
\use_default_options true
\begin_modules
multicol
enumitem
initials
\end_modules
\maintain_unincluded_children false
\language american
\language_package default
\inputencoding iso8859-15
\fontencoding T1
\font_roman "palatino" "default"
\font_sans "kurier" "default"
\font_typewriter "beramono" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize 11
\spacing single
\use_hyperref true
\pdf_title "newLISP/Tk"
\pdf_author "pdb"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "pdfborderstyle="
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 0
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification false
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 22mm
\topmargin 27mm
\rightmargin 22mm
\bottommargin 50mm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation 18bp
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 2
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
providecommand{
\backslash
PdB}{P
\backslash
kern-.3em
\backslash
lower.35em
\backslash
hbox{{
\backslash
small D}}
\backslash
kern-.1emB
\backslash
@}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
providecommand{
\backslash
py}{
\backslash
textsf{python}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
providecommand{
\backslash
tki}{
\backslash
textsf{tkinter}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
providecommand{
\backslash
nltk}{
\backslash
textsf{newLISP/Tk}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
providecommand{
\backslash
tcl}{
\backslash
textsf{Tcl/Tk}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
providecommand{
\backslash
nL}{
\backslash
textsf{newLISP}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
providecommand{
\backslash
rs}{
\backslash
texttt{{
\backslash
footnotesize rsync}}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
providecommand{
\backslash
s}{
\backslash
textsc{
\backslash
textbf{Semada}}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
providecommand{
\backslash
s}{
\backslash
textsc{Semada}} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
providecommand{
\backslash
wi}{
\backslash
texttt{
\backslash
emph{
\backslash
scriptsize{}wish}}} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
begin{multicols}{2}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
end{multicols}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
columnbreak{}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Alt+a 1 Teil
\end_layout

\begin_layout Plain Layout
Alt+a 2 Abschnitt
\end_layout

\begin_layout Plain Layout
Alt+a 3 UnterAbschnitt
\end_layout

\begin_layout Plain Layout
Alt+a 4 UnterUnterAbschnitt
\end_layout

\begin_layout Plain Layout
Alt+a 5 Paragraph
\end_layout

\begin_layout Plain Layout
doppelte Anführung (engl.): " = Ctrl+shift+
\begin_inset Quotes grd
\end_inset


\end_layout

\begin_layout Plain Layout
Bildschirm-Schrift 
\begin_inset Quotes gld
\end_inset

Schreibmaschine
\begin_inset Quotes grd
\end_inset

: monospace
\end_layout

\begin_layout Plain Layout
Ausgabe-Schrift 
\begin_inset Quotes gld
\end_inset

Schreibmaschine
\begin_inset Quotes grd
\end_inset

: Bera Mono
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
pagenumbering{gobble}% Remove page numbers (and reset to 1)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
shift+F1 setzen einer Marke — Strg+1 springen zur Marke
\end_layout

\begin_layout Plain Layout
shift+F2 setzen einer Marke — Strg+2 springen zur Marke
\end_layout

\begin_layout Plain Layout
\SpecialChar ldots

\end_layout

\begin_layout Plain Layout
shift+F9 setzen einer Marke — Strg+9 springen zur Marke
\end_layout

\end_inset


\end_layout

\begin_layout Title
Experimental 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
nL
\end_layout

\end_inset

/Tk
\begin_inset Newline newline
\end_inset

Version 0.1
\end_layout

\begin_layout Author
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
PdB
\end_layout

\end_inset


\end_layout

\begin_layout Abstract

\size small
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent{}
\end_layout

\end_inset

This text describes an experimental interface, designed to build 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tcl{}
\end_layout

\end_inset


\begin_inset Index idx
status open

\begin_layout Plain Layout

\size small
Tcl/Tk
\end_layout

\end_inset

 GUIs controlled from 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
nL
\end_layout

\end_inset

, similar to 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
py
\end_layout

\end_inset

's 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tki{}
\end_layout

\end_inset

.
 It uses the FOOP-Classes
\size default

\begin_inset Foot
status open

\begin_layout Plain Layout
See the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
nL
\end_layout

\end_inset

-manual here: http://www.newlisp.org/downloads/manual_frame.html
\end_layout

\end_inset


\size small
 to describe the widgets being used in the GUI.
\end_layout

\begin_layout Abstract
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Abstract

\series bold
The only 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tcl{}
\end_layout

\end_inset

 geometry-manager available here is GRID
\begin_inset Index idx
status open

\begin_layout Plain Layout

\size small
GRID
\end_layout

\end_inset

.
\end_layout

\begin_layout Abstract
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Abstract
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent{}
\end_layout

\end_inset

It is a small subset of what 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tcl{}
\end_layout

\end_inset

 offers, when building a GUI.
 Work is still under way.
\end_layout

\begin_layout Abstract
The interface described here has been built and tested so far, using 
\family sans
Linux
\family default
 (
\family sans
LMDE5
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
footnote{Based on Debian 11.2 bullseye}
\end_layout

\end_inset


\family default
 with the 
\family sans
cinnamon
\family default
 desktop) as the underlying operating system.
\end_layout

\begin_layout Abstract

\emph on
Please keep in mind that the software is in an experimental stage.
 Likewise is this doc\SpecialChar softhyphen
u\SpecialChar softhyphen
men\SpecialChar softhyphen
ta\SpecialChar softhyphen
tion in progress.
 Inconsistencies may occur.
 Please let me know if something is wrong or missing.
\end_layout

\begin_layout Paragraph
Disclaimer: 
\end_layout

\begin_layout Quote
Experimental 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
nL
\end_layout

\end_inset

/Tk is free software, covered by the GNU General Public License, and comes
 WITHOUT ANY WARRANTY WHATSOEVER.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{arabic}% Arabic page numbers (and reset to 1)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
clearpage
\end_layout

\end_inset


\end_layout

\begin_layout Part
Current state
\end_layout

\begin_layout Standard
May 19, 2024
\end_layout

\begin_layout Description
License: GNU General Public License
\end_layout

\begin_layout Description
State: 
\emph on
Experimental
\end_layout

\begin_layout Section
Requirements\SpecialChar breakableslash
Architecture
\end_layout

\begin_layout Standard
Status: May 12, 2024
\end_layout

\begin_layout Subsection
Installation
\end_layout

\begin_layout Standard
This installation has been done on Linux (LMDE5).
\end_layout

\begin_layout Labeling
\labelwidthstring MMMMMMM
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
nL{}
\end_layout

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
nL{}
\end_layout

\end_inset

 needs to be installed.
 The 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
nL
\end_layout

\end_inset

-version used is v.
\begin_inset space ~
\end_inset

10.7.5 64-bit on Linux.
\end_layout

\begin_layout Labeling
\labelwidthstring MMMMMMM
\noindent
\align block

\family typewriter
\size scriptsize
tcl
\family default
\size default
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
7M
\end_layout

\end_inset

Then we need to install 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tcl{}
\end_layout

\end_inset

 including 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
wi{}
\end_layout

\end_inset

.
 Version is 8.6.11-2.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
wi{}
\end_layout

\end_inset

 (Windowing Shell) is a 
\family sans
Tcl
\family default
 interpreter currently part of the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tcl{}
\end_layout

\end_inset

 programming suite.
 On Linux it is started by calling 
\family typewriter
\size scriptsize
/usr/bin/wish
\family default
\size default
.
\end_layout

\begin_layout Labeling
\labelwidthstring MMMMMMM

\family typewriter
\size scriptsize
tk
\family default
\size default
 Version (8.6)
\end_layout

\begin_layout Labeling
\labelwidthstring MMMMMMM

\family typewriter
\size scriptsize
tklib
\family default
\size default
 Version (0.7)
\end_layout

\begin_layout Labeling
\labelwidthstring MMMMMMM

\family typewriter
\size scriptsize
iwidgets4
\family default
\size default
 (plus 
\family typewriter
\size scriptsize
itk3
\family default
\size default
) is needed, when a scrolledtext widget is to be used.
\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Subsection
Architecture
\end_layout

\begin_layout Standard
A program using the interface described here is made up of 4 layers:
\end_layout

\begin_layout Labeling
\labelwidthstring WWWWWWW
\noindent
\align block

\family typewriter
\size scriptsize
<app>.lsp
\family default
\size default
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
7M
\end_layout

\end_inset

top-level application to perform a GUI-based interaction with the user.
 Written in 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
nL{}
\end_layout

\end_inset

 using 
\family typewriter
\size scriptsize
ts.lsp
\family default
\size default
, 
\family typewriter
\size scriptsize
Tk.lsp
\family default
\size default
 and 
\family typewriter
\size scriptsize
msg.lsp
\family default
\size default
.
\end_layout

\begin_layout Labeling
\labelwidthstring WWWWWWW
\begin_inset Formula $\downarrow\uparrow$
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring WWWWWWW

\family typewriter
\size scriptsize
ts.lsp
\family default
\size default
 library – it's an interface, a 
\begin_inset Quotes eld
\end_inset

translator
\begin_inset Quotes erd
\end_inset

-layer, which translates 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
nL
\end_layout

\end_inset

-statements of our application into 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tcl
\end_layout

\end_inset

-language strings being sent to 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
wi{}
\end_layout

\end_inset

 via 
\family typewriter
\size scriptsize
Tk.lsp
\family default
\size default
.
 This is the GUI 
\emph on
language
\emph default
 for our application, similar to 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
py
\end_layout

\end_inset

's 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tki{}
\end_layout

\end_inset

 which was kind of a template for this.
 It is written in 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
nL
\end_layout

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring WWWWWWW
\begin_inset Formula $\downarrow\uparrow$
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring WWWWWWW

\family typewriter
\size scriptsize
Tk.lsp
\family default
\size default
 library – the communication-
\begin_inset Quotes erd
\end_inset

engine
\begin_inset Quotes erd
\end_inset

 used to send and receive information (waiting for output written from 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
wi{}
\end_layout

\end_inset

) between 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
wi{}
\end_layout

\end_inset

 and the application via 
\family typewriter
\size scriptsize
ts.lsp
\family default
\size default
.
 It launches the process 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
wi{}
\end_layout

\end_inset

 (
\family typewriter
\size scriptsize
/usr/bin/wish
\family default
\size default
) in background mode using pipes:
\end_layout

\begin_deeper
\begin_layout LyX-Code
 
\size scriptsize
(
\series bold
setq
\series default
 MAIN:PID (
\series bold
process
\series default
 "/usr/bin/wish" tcin tcout [errout]))
\end_layout

\begin_layout Standard

\family typewriter
\size scriptsize
Tk.lsp
\family default
\size default
 is written in 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
nL
\end_layout

\end_inset

.
\end_layout

\end_deeper
\begin_layout Labeling
\labelwidthstring WWWWWWW
\begin_inset Formula $\downarrow\uparrow$
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring WWWWWWW
\noindent
\align block
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
wi{}
\end_layout

\end_inset

 
\begin_inset Note Note
status open

\begin_layout Plain Layout
7M
\end_layout

\end_inset

process 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
wi{}
\end_layout

\end_inset

 – it needs to be started first.
\end_layout

\begin_layout Section
Libs
\end_layout

\begin_layout Standard
Status: May 20, 2024
\end_layout

\begin_layout Standard
The 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
nltk{}
\end_layout

\end_inset

 libs are\SpecialChar breakableslash
will be stored in the following Directory structure:
\end_layout

\begin_layout LyX-Code

\size scriptsize
.
                           # ~/.local/newLISP/newLISP-Tk/lib/
\end_layout

\begin_layout LyX-Code

\size scriptsize
├── bin
\end_layout

\begin_layout LyX-Code

\size scriptsize
│   └── build               # Built demos as standalone executables (empty)
\end_layout

\begin_layout LyX-Code

\size scriptsize
├── doc                     # PDF and built library documentation (html)
 using newlispdoc
\end_layout

\begin_layout LyX-Code

\size scriptsize
├── lib
\end_layout

\begin_layout LyX-Code

\size scriptsize
│   ├── msg.lsp             # calls to Tcl/Tk-message-dialogs
\end_layout

\begin_layout LyX-Code

\size scriptsize
│   ├── Tk.lsp              # interaction newlisp <--> wish-server
\end_layout

\begin_layout LyX-Code

\size scriptsize
│   └── ts.lsp              # interface between newlisp and `wish` via Tk.lsp
\end_layout

\begin_layout LyX-Code

\size scriptsize
├── README-newlisp-tk.md
\end_layout

\begin_layout LyX-Code

\size scriptsize
└── src
\end_layout

\begin_layout LyX-Code

\size scriptsize
    ├── demo.lsp            # hello world demo with messageBox
\end_layout

\begin_layout LyX-Code

\size scriptsize
    └── tcltk.lsp           # tcltk-basics: change color of label
\end_layout

\begin_layout LyX-Code

\size scriptsize
                              (pure tcltk, using pipes, no newLISP/Tk)
\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Section
A short demo
\end_layout

\begin_layout Standard
\SpecialChar ldots
 to receive an impression
\begin_inset space ~
\end_inset

\SpecialChar ldots

\end_layout

\begin_layout Standard
This shows a very simple program using 
\family typewriter
\size scriptsize
ts.lsp
\family default
\size default
.
 It's the standard 
\begin_inset Quotes eld
\end_inset

hello world
\begin_inset Quotes erd
\end_inset

 program, which is used to show that the basic components work.
 It's a label and a button using the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tcl
\end_layout

\end_inset

-
\family typewriter
\size scriptsize
grid
\family default
\size default
 manager here:
\end_layout

\begin_layout LyX-Code

\size scriptsize
(1) #!/usr/bin/env newlisp
\end_layout

\begin_layout LyX-Code

\size scriptsize
(2) ## Time-stamp: <2024-05-19 16:10:55 paul>
\end_layout

\begin_layout LyX-Code

\size scriptsize
(3) (
\series bold
constant
\series default
 (
\series bold
global
\series default
 'LIBS)
\end_layout

\begin_layout LyX-Code

\size scriptsize
              (
\series bold
string
\series default
 (
\series bold
env
\series default
 "HOME") "/.local/newLISP/newLISP-Tk/lib/" ))
\end_layout

\begin_layout LyX-Code

\size scriptsize
(4) (
\series bold
load
\series default
 (
\series bold
string
\series default
 LIBS "ts.lsp")) ;GUI-Server ’ts (interface)
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code

\size scriptsize
(5) (
\series bold
define
\series default
 (
\series bold
MAIN
\series default
:end)                     ;handler for quit-button
\end_layout

\begin_layout LyX-Code

\size scriptsize
(6)    (
\series bold
let
\series default
 (res "no")                     ;"no"/"yes"
\end_layout

\begin_layout LyX-Code

\size scriptsize
(7)       (
\series bold
while
\series default
 (= res "no")
\end_layout

\begin_layout LyX-Code

\size scriptsize
(8)          (
\series bold
setq
\series default
 res
\end_layout

\begin_layout LyX-Code

\size scriptsize
(9)                (:askyesno
\end_layout

\begin_layout LyX-Code

\size scriptsize
(10)                (MessageBox (Title "askyesno")
\end_layout

\begin_layout LyX-Code

\size scriptsize
(11)                            (Text
\end_layout

\begin_layout LyX-Code

\size scriptsize
(12)                             (
\series bold
string
\series default
 "Are you sure?" ))))))
\end_layout

\begin_layout LyX-Code

\size scriptsize
(13)      (ts:quit)))
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code

\size scriptsize
(14) (Tk:init)
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code

\size scriptsize
(15) (ts:setw (Window (Name 
\begin_inset Quotes qld
\end_inset

win
\begin_inset Quotes qrd
\end_inset

)
\end_layout

\begin_layout LyX-Code

\size scriptsize
                      (Title "newLISP-Tk")
\end_layout

\begin_layout LyX-Code

\size scriptsize
                      (Minsize (Width 200) (Height 50))))
\end_layout

\begin_layout LyX-Code

\size scriptsize
(16) (:build win)
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code

\size scriptsize
(17) (ts:setw (Label (Name 
\begin_inset Quotes qld
\end_inset

lbl
\begin_inset Quotes qrd
\end_inset

) (Text "Hello World!")))  ;define label
\end_layout

\begin_layout LyX-Code

\size scriptsize
(18) (:build lbl)
\end_layout

\begin_layout LyX-Code

\size scriptsize
(19) (:setgrid lbl (Row 0) (Column 0) (Padx 5) (Pady 10)) ;position
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code

\size scriptsize
(20) (ts:setw (Button (Name 
\begin_inset Quotes qld
\end_inset

btn-end
\begin_inset Quotes qrd
\end_inset

) (Text "Quit") (Command "end")))
\end_layout

\begin_layout LyX-Code

\size scriptsize
(21) (:build btn-end)
\end_layout

\begin_layout LyX-Code

\size scriptsize
(22) (:setgrid btn-end (Row 1) (Column 0) (Padx 5) (Pady 5))
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code

\size scriptsize
(23) (ts:xquit)                      ;quit using the x-button of the window
\end_layout

\begin_layout LyX-Code

\size scriptsize
(24) (Tk:mainloop )                  ;Tk: listening to in-coming events
\end_layout

\begin_layout Standard
In line 1
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
footnote{The line numbers are not part of the program.}
\end_layout

\end_inset

 we tell the system where to find 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
nL{}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
In line 4 we load 
\family typewriter
\size scriptsize
ts.lsp
\family default
\size default
 from the lib-directory named in line 3.
 The lib 
\family typewriter
\size scriptsize
Tk.lsp
\family default
\size default
 will be loaded by 
\family typewriter
\size scriptsize
ts.lsp
\family default
\size default
 as well.
 
\end_layout

\begin_layout Standard
Lines 5\SpecialChar ldots
13 defines an event handler for the quit-button defined in lines
 20\SpecialChar ldots
22.
 When clicking the Quit-button the is asked if he's sure.
 If so, 
\family typewriter
\size scriptsize
res
\family default
\size default
 gets a 
\family typewriter
\size scriptsize

\begin_inset Quotes qld
\end_inset

yes
\begin_inset Quotes qrd
\end_inset


\family default
\size default
 and quits the program.
 This is here just to show a messageBox.
\end_layout

\begin_layout Standard
In line 14 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tcl{}
\end_layout

\end_inset

 (i.e.
 the process 
\family typewriter
\size scriptsize
wish
\family default
\size default
) is started using pipes.
 
\end_layout

\begin_layout Standard
In lines 15 and 16 the main window is set up (
\family typewriter
\size scriptsize
setw
\family default
\size default
 means SET Window).
 The 
\family typewriter
\size scriptsize
:build
\family default
\size default
-function sends it to 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tcl{}
\end_layout

\end_inset

 via 
\family typewriter
\size scriptsize
Tk
\family default
\size default
.
\end_layout

\begin_layout Standard
Lines 17\SpecialChar ldots
19 define a label, giving it a Name and a Text.
 :build again sends it wish.
 Line 19 shows that the 
\family typewriter
\size scriptsize
grid
\family default
\size default
 geometry manager is used, telling it where to place the label.
\end_layout

\begin_layout Standard
20\SpecialChar ldots
22: In order to quit the application we add a button in Row 1, Column
 0, connecting it with the handler, defined in lines 5\SpecialChar ldots
13.
\end_layout

\begin_layout Standard
Line 23 makes sure that the application can be stopped by clicking the little
 
\family typewriter
\size scriptsize
'x'
\family default
\size default
-button on the upper left corner of the window.
 
\end_layout

\begin_layout Standard
Then the event loop (infinite loop) is started in line 24 and from then
 on, the program will be 
\begin_inset Quotes eld
\end_inset

listening
\begin_inset Quotes erd
\end_inset

 to events done by the user (Quit-button or 
\family typewriter
\size scriptsize
'x'
\family default
\size default
) until the program is stopped.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
clearpage
\end_layout

\end_inset


\end_layout

\begin_layout Section
A simple backup program
\end_layout

\begin_layout Standard
Status: May 10, 2024
\end_layout

\begin_layout Standard
As a more extensive example, a simple backup program is described here.
 It makes use of the 
\family typewriter
\size scriptsize
rsync
\family default
\size default
 program available on Unix-like systems.
 The idea for this program is to use 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
rs{}
\end_layout

\end_inset


\begin_inset Index idx
status open

\begin_layout Plain Layout
rsync
\end_layout

\end_inset

 and part of it's options in order to perform a 
\series bold
\emph on
backup
\series default
\emph default

\begin_inset Index idx
status open

\begin_layout Plain Layout
backup
\end_layout

\end_inset

 from a source-directory to a sink-directory.
 Building a GUI for it, this example needs a couple of widgets\SpecialChar breakableslash
elements:
\end_layout

\begin_layout Itemize
label
\end_layout

\begin_layout Itemize
entry
\end_layout

\begin_layout Itemize
button
\end_layout

\begin_layout Itemize
checkbutton
\end_layout

\begin_layout Itemize
labelframe
\end_layout

\begin_layout Itemize
frame
\end_layout

\begin_layout Itemize
scrolledtext (requires 
\family typewriter
\size scriptsize
iwidgets4
\family default
\size default
)
\end_layout

\begin_layout Standard
which, besides others, are provided by 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tcl{}
\end_layout

\end_inset

 but will be indirectly used via the GUI-interface 
\family typewriter
\size scriptsize
ts.lsp
\family default
\size default
 in order to make the program more readable.
 
\end_layout

\begin_layout Standard
The previous version was written in 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
py{}
\end_layout

\end_inset

, using 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tki
\end_layout

\end_inset

.
 The GUI looked like this:
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
backup-GUI 
\end_layout

\end_inset


\begin_inset Graphics
	filename Bildschirmfoto vom 2024-05-15 14-04-37.png
	lyxscale 44
	scale 44

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Now we try to build it again using 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
nL{}
\end_layout

\end_inset

, 
\family typewriter
\size scriptsize
Tk.lsp, ts.lsp
\family default
\size default
 and 
\family typewriter
\size scriptsize
msg.lsp\SpecialChar endofsentence

\family default
\size default
 Keep in mind that loading 
\family typewriter
\size scriptsize
ts.lsp
\family default
\size default
 will also load 
\family typewriter
\size scriptsize
Tk.lsp
\family default
\size default
 and 
\family typewriter
\size scriptsize
msg.lsp
\family default
\size default
:
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
load
\series default
 (
\series bold
string
\series default
 LIBS "ts.lsp")) ; GUI-Server 'ts (interface)
\end_layout

\begin_layout Standard
Where 
\family typewriter
\size scriptsize
LIBS
\family default
\size default
 is the path-string of the directory where the libs are located.
 Assuming 
\family typewriter
\size scriptsize
HOME
\family default
\size default
 is known:
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
constant
\series default
 (
\series bold
global
\series default
 'HOME) (
\series bold
env
\series default
 "HOME"))
\end_layout

\begin_layout Standard
we have
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
change-dir
\series default
 HOME)
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
setq
\series default
 LIBS (
\series bold
real-path
\series default
 "./.local/newLISP/newLISP-Tk/lib/")) -->
\end_layout

\begin_layout LyX-Code

\size scriptsize
"/home/paul/.local/newLISP/newLISP-Tk/lib/" 
\end_layout

\begin_layout Standard
or without a 
\family typewriter
\series bold
\size scriptsize
change-dir
\family default
\series default
\size default
:
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
setq
\series default
 LIBS (
\series bold
real-path
\series default
 (
\series bold
string
\series default
 HOME "/.local/newLISP/newLISP-Tk/lib/"))) -->
\end_layout

\begin_layout LyX-Code

\size scriptsize
"/home/paul/.local/newLISP/newLISP-Tk/lib/" 
\end_layout

\begin_layout Standard
If 
\family typewriter
\series bold
\size scriptsize
real-path
\family default
\series default
\size default
 fails (e.g., because of a nonexistent path), 
\family typewriter
\series bold
\size scriptsize
nil
\family default
\series default
\size default
 is returned.
\end_layout

\begin_layout Standard
<<<<<<>>>>>>
\end_layout

\begin_layout Section
Tk.lsp
\begin_inset CommandInset label
LatexCommand label
name "sec:Tk.lsp"

\end_inset


\end_layout

\begin_layout Standard
Status: May 12, 2024
\end_layout

\begin_layout Standard
This module sets up the connection between the interface provided by 
\family typewriter
\size footnotesize
ts.lsp
\family default
\size default
 and 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tcl{}
\end_layout

\end_inset

 (using 
\family typewriter
\size footnotesize
/usr/bin/wish
\family default
\size default
 via 
\series bold
\emph on
pipes
\series default
\emph default

\begin_inset Index idx
status open

\begin_layout Plain Layout
pipes
\end_layout

\end_inset

).
 It is a kind of an 
\begin_inset Quotes eld
\end_inset

engine
\begin_inset Quotes erd
\end_inset

 driving our car (our application) by sending and receiving statements\SpecialChar breakableslash
command-st
rings back and forth between 
\family typewriter
\size footnotesize
ts.lsp
\family default
\size default
 and 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tcl
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
Communications
\end_layout

\begin_layout Subsubsection
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
nL
\end_layout

\end_inset

-manual
\end_layout

\begin_layout Paragraph
pipe:
\end_layout

\begin_layout Standard

\family sans
\series bold
syntax: (pipe)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent{}
\end_layout

\end_inset

Creates an inter-process communications pipe and returns the read and write
 handles to it within a list.
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
pipe
\series default
) → (3 4) ; 3 for read, 4 for writing
\end_layout

\begin_layout Standard
The pipe handles can be passed to a child process launched via process or
 to fork for inter-process communications.
\end_layout

\begin_layout Standard
Note that the pipe does not block when being written to, 
\emph on
but it does block reading until bytes are available.
 A read-line blocks until a newline character is received.

\emph default
 A read blocks when fewer characters than specified are available from a
 pipe that has not had the writing end closed by all processes.
\begin_inset Foot
status open

\begin_layout Plain Layout
(http://www.newlisp.org/downloads/manual_frame.html), with my italics
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
peek: 
\end_layout

\begin_layout Standard

\family sans
\series bold
syntax: (peek 
\emph on
int-handle
\emph default
)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent{}
\end_layout

\end_inset

Returns the number of bytes ready to be read on a file descriptor; otherwise,
 it returns nil if the file descriptor is invalid.
 peek can also be used to check 
\emph on
stdin
\emph default
.
 This function is only available on Unix-like operating systems.
 
\end_layout

\begin_layout Paragraph
read-line:
\end_layout

\begin_layout Standard

\family sans
\series bold
syntax: (read-line [
\emph on
int-file
\emph default
])
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent{}
\end_layout

\end_inset

Reads from the current I/O device a string delimited by a line-feed character
 (ASCII 10).
 There is no limit to the length of the string that can be read.
 The line-feed character is not part of the returned string.
 The line always breaks on a line-feed, which is then swallowed.
 A line breaks on a carriage return (ASCII 13) only if followed by a line-feed,
 in which case both characters are discarded.
 A carriage return alone only breaks and is swallowed if it is the last
 character in the stream.
\end_layout

\begin_layout Standard
By default, the current device is the keyboard (device 0).
 Use the built-in function device to specify a different I/O device (e.g.,
 a file).
 Optionally, a file handle can be specified in the 
\emph on
int-file
\emph default
 obtained from a previous open statement.
\end_layout

\begin_layout Standard
The last buffer contents from a read-line operation can be retrieved using
 
\series bold
current-line
\series default
.
\end_layout

\begin_layout Standard
When 
\family typewriter
\size scriptsize
read-line
\family default
\size default
 is reading from a file or from 
\emph on
stdin
\emph default
 in a CGI program or pipe, it will return 
\family typewriter
\size scriptsize
nil
\family default
\size default
 when input is exhausted.
\end_layout

\begin_layout Paragraph
current-line:
\end_layout

\begin_layout Standard

\family sans
\series bold
syntax: (current-line)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent{}
\end_layout

\end_inset

Retrieves the contents of the last 
\series bold
read-line
\series default
 operation.
 
\end_layout

\begin_layout Subsubsection
Own observations
\end_layout

\begin_layout Itemize

\family typewriter
\series bold
\size scriptsize
read-line
\family default
\series default
\size default
 breaks (stopps reading) when a 
\family typewriter
\size scriptsize

\begin_inset Quotes qld
\end_inset


\backslash
n
\begin_inset Quotes qrd
\end_inset


\family default
\size default
-character is encountered.
 So, there might be more in the pipe.
\end_layout

\begin_layout Itemize
As a result 
\family typewriter
\series bold
\size scriptsize
read-line
\family default
\series default
\size default
 will clear the buffer where 
\family typewriter
\size scriptsize
(
\series bold
current-line
\series default
)
\family default
\size default
 is looking at (let's call it cur\SpecialChar softhyphen
rent-line-buf\SpecialChar softhyphen
fer) and put the new contents
 into it.
\end_layout

\begin_layout Itemize

\family typewriter
\series bold
\size scriptsize
read-line
\family default
\series default
\size default
 blocks until there is something in the pipe 
\family typewriter
\size scriptsize
Tk:myin\SpecialChar endofsentence

\end_layout

\begin_layout Itemize
it seems that a (
\family typewriter
\size scriptsize
wish
\family default
\size default
-) pipe never gets exhausted.
 So read-line blocks until something shows up in our in-pipe.
\end_layout

\begin_layout Itemize
if it reads something, it will put it into the cur\SpecialChar softhyphen
rent-line-buf\SpecialChar softhyphen
fer from
 where 
\family typewriter
\size scriptsize
(
\series bold
current-line
\series default
)
\family default
\size default
 can read it.
 But 
\family typewriter
\size scriptsize
(
\series bold
current-line
\series default
)
\family default
\size default
 will not clear that buffer.
 So the content of that buffer will stay there until the next 
\family typewriter
\series bold
\size scriptsize
read-line
\family default
\series default
\size default
 occurs – even if we use an 
\family typewriter
\series bold
\size scriptsize
eval-string
\family default
\series default
\size default
:
\end_layout

\begin_deeper
\begin_layout LyX-Code

\size scriptsize
(
\series bold
eval-string
\series default
 (
\series bold
current-line
\series default
))
\end_layout

\end_deeper
\begin_layout Paragraph
Try:
\end_layout

\begin_layout Standard
In some cases we don't read the answer from 
\family typewriter
\size scriptsize
wish
\family default
\size default
 because we just don't need it.
 In order to clear the pipe, one or more 
\family typewriter
\series bold
\size scriptsize
read-line
\family default
\series default
\size default
s are needed.
\end_layout

\begin_layout Standard

\series bold
But:
\series default
 while 
\family typewriter
\series bold
\size scriptsize
read-line
\family default
\series default
\size default
 is blocking, nothing else can happen.
 So we need to check wether our pipe contains any more unread bytes (characters
 – wish always sends strings).
 Here 
\family typewriter
\series bold
\size scriptsize
peek
\family default
\series default
\size default
 comes into play.
 It's our 
\begin_inset Quotes eld
\end_inset

look-ahead
\begin_inset Quotes erd
\end_inset

 into the pipe.
 So, before we ask 
\family typewriter
\size scriptsize
wish
\family default
\size default
, to give us an answer, we need to clear our in-pipe 
\family typewriter
\size scriptsize
myin
\family default
\size default
 thus synchronizing with 
\family typewriter
\size scriptsize
wish
\family default
\size default
.
 In 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
nL
\end_layout

\end_inset

-code:
\end_layout

\begin_layout LyX-Code

\size scriptsize
(1) (
\series bold
while
\series default
 (> (
\series bold
peek
\series default
 myin) 0) (
\series bold
read-line
\series default
 myin)) ;clear pipe
\end_layout

\begin_layout Standard
After that, 
\family typewriter
\size scriptsize
(= (
\series bold
peek
\series default
 myin) 0)
\family default
\size default
 is telling us that the pipe is 
\begin_inset Quotes eld
\end_inset

clean
\begin_inset Quotes erd
\end_inset

 – we are synced.
 Well, while 
\family typewriter
\size scriptsize
(>
\begin_inset space ~
\end_inset

(
\series bold
peek
\series default

\begin_inset space ~
\end_inset

myin)
\begin_inset space ~
\end_inset

0)
\family default
\size default
 holds, our 
\family typewriter
\series bold
\size scriptsize
read-line
\family default
\series default
\size default
 shouldn't block so now we can send out our question-string:
\end_layout

\begin_layout LyX-Code

\size scriptsize
(2) (
\series bold
write-line
\series default
 myout 
\begin_inset Quotes qld
\end_inset

<question-string>
\begin_inset Quotes qrd
\end_inset

)
\end_layout

\begin_layout Standard
or
\end_layout

\begin_layout LyX-Code

\size scriptsize
(2) (Tk 
\begin_inset Quotes qld
\end_inset

<question-string>
\begin_inset Quotes qrd
\end_inset

)
\end_layout

\begin_layout Standard
Now we read the answer until 
\family typewriter
\size scriptsize
myin
\family default
\size default
 is empty:
\end_layout

\begin_layout LyX-Code

\size scriptsize
(3) (
\series bold
while
\series default
 (> (
\series bold
peek
\series default
 myin) 0)
\end_layout

\begin_layout LyX-Code

\size scriptsize
      (
\series bold
read-line
\series default
 myin)
\end_layout

\begin_layout LyX-Code

\size scriptsize
      (
\series bold
eval-string
\series default
 (
\series bold
current-line
\series default
))
\end_layout

\begin_layout LyX-Code

\size scriptsize
      ;;do something else
\end_layout

\begin_layout LyX-Code

\size scriptsize
      )
\end_layout

\begin_layout LyX-Code

\size scriptsize
    ;; pipe should be empty now
\end_layout

\begin_layout Standard
If 
\family typewriter
\series bold
\size scriptsize
(current-line)
\family default
\series default
\size default
 results in an empty string, 
\family typewriter
\series bold
\size scriptsize
eval-string
\family default
\series default
\size default
 will return 
\family typewriter
\series bold
\size scriptsize
nil
\family default
\series default
\size default
.
\end_layout

\begin_layout Standard
<<<>>>
\end_layout

\begin_layout Subsection
Functions
\end_layout

\begin_layout Subsubsection
Tk:init
\end_layout

\begin_layout Standard
Status: May 17, 2024
\end_layout

\begin_layout Standard
Initializes the communication between 
\family typewriter
\size scriptsize
Tk:Tk
\family default
\size default
 and the process 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
wi{}
\end_layout

\end_inset

.
 It sets up at least two pipes and starts the process 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
wi
\end_layout

\end_inset

.
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
map set
\series default
 '(myin tcout) (
\series bold
pipe
\series default
))
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
map set
\series default
 '(tcin myout) (
\series bold
pipe
\series default
))
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
setq
\series default
 MAIN:PID (
\series bold
process
\series default
 "/usr/bin/wish" tcin tcout ))
\end_layout

\begin_layout Subsubsection
Tk:Tk 
\end_layout

\begin_layout Standard
This is the Default-Functor for the 
\family typewriter
\size scriptsize
(context 'Tk)
\family default
\size default
 and the basic sending-machine.
 It mainly does a 
\family typewriter
\size scriptsize
write-line
\family default
\size default
 into the pipe 
\family typewriter
\size scriptsize
myout
\family default
\size default
.
 So it's a 
\emph on
sender only
\emph default
.
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
write-line
\series default
 Tk:myout <
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tcl{}
\end_layout

\end_inset

-string>)
\end_layout

\begin_layout Standard
It is called like this:
\end_layout

\begin_layout LyX-Code

\size scriptsize
(Tk "wm geometry .
 +600+100")
\end_layout

\begin_layout LyX-Code

\size scriptsize
(Tk "wm title    .
 {Label-Test}")
\end_layout

\begin_layout LyX-Code

\size scriptsize
(Tk "ttk::label .lbl -text 
\backslash
"Field 1
\backslash
" -borderwidth 2 -relief solid")
\end_layout

\begin_layout LyX-Code

\size scriptsize
(Tk "grid .lbl -row 0 -column 0")
\end_layout

\begin_layout Subsubsection
Tk:mainloop 
\end_layout

\begin_layout Standard
We need to get the information coming from the GUI, from 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
wi{}
\end_layout

\end_inset

 using 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
nL
\end_layout

\end_inset

's 
\family typewriter
\series bold
\size scriptsize
read-line
\family default
\series default
\size default
 function and interpret it using 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
nL
\end_layout

\end_inset

's 
\family typewriter
\series bold
\size scriptsize
eval-string
\family default
\series default
\size default
:
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
while
\series default
 (
\series bold
read-line
\series default
 Tk:myin)
\end_layout

\begin_layout LyX-Code

\size scriptsize
   (
\series bold
eval-string
\series default
 (
\series bold
current-line
\series default
)))
\end_layout

\begin_layout Standard
This is an infinite loop, waiting for an event to occur.
 If there is a widget with a 
\family typewriter
\size scriptsize
command
\family default
\size default
 attached to it, this command (a 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
nL
\end_layout

\end_inset

-function defined in our application) will be called, when the user triggers
 an event by clicking or entering the appropriate information into the GUI.
 Function 
\family typewriter
\series bold
\size scriptsize
current-line
\family default
\series default
\size default
 retrieves the contents of the last 
\family typewriter
\series bold
\size scriptsize
read-line
\family default
\series default
\size default
 operation.
 
\end_layout

\begin_layout Standard
The command-function must be defined in context 
\family typewriter
\series bold
\size scriptsize
'MAIN
\family default
\series default
\size default
, because the tcl-string requires the command-function to be a 
\family typewriter
\size scriptsize
(
\series bold
MAIN
\series default
:<function)>
\family default
\size default
.
\end_layout

\begin_layout Section
ts.lsp
\end_layout

\begin_layout Standard
Module 
\family typewriter
\size scriptsize
ts.lsp
\family default
\size default
 defines an interface between the users application and 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tcl
\end_layout

\end_inset

.
 It needs to load other modules: 
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
load
\series default
 "Tk.lsp")  ;(context 'Tk)
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
load
\series default
 "msg.lsp") ;interface to Tcl/Tk message boxes 
\end_layout

\begin_layout Standard
They are both loaded when 
\family typewriter
\size scriptsize
ts.lsp
\family default
\size default
 is loaded.
 Module 
\family typewriter
\size scriptsize
Tk.lsp
\family default
\size default
 is described in section 
\begin_inset CommandInset ref
LatexCommand nameref
reference "sec:Tk.lsp"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Subsection
Widgets as Classes
\end_layout

\begin_layout Standard
Status: May 11, 2024
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent{}
\end_layout

\end_inset

Widgets and their Options are defined as 
\series bold
\emph on
FOOP-Classes
\series default
\emph default

\begin_inset Foot
status open

\begin_layout Plain Layout
See the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
nL
\end_layout

\end_inset

-manual here: http://www.newlisp.org/downloads/manual_frame.html
\end_layout

\end_inset


\begin_inset Index idx
status open

\begin_layout Plain Layout
FOOP-Classes
\end_layout

\end_inset

.
\end_layout

\begin_layout Quote
\begin_inset Quotes eld
\end_inset

As a convention, it is recommended to start class names in upper-case to
 signal that the name stands for a namespace.
\begin_inset Quotes erd
\end_inset

 (manual)
\end_layout

\begin_layout Standard
The main class here is 
\family typewriter
\size footnotesize
'Window
\family default
\size default
:
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
new Class
\series default
 'Window)
\end_layout

\begin_layout Standard
All widgets are defined as sub-classes, like 
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
new
\series default
 'Window 'Label) 
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
new
\series default
 'Window 'Button)
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
new
\series default
 'Window 'Entry)
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
new
\series default
 'Window 'Checkbutton)
\end_layout

\begin_layout LyX-Code

\size scriptsize
\SpecialChar ldots

\end_layout

\begin_layout Standard
In order to enable structured widget-descriptions, all widget-options are
 defined as FOOP-classes themselves:
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
new Class
\series default
 'Name)
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
new Class
\series default
 'Width)
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
new Class
\series default
 'Height)
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
new Class
\series default
 'Title)
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
new Class
\series default
 'Text)
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
new Class
\series default
 'Padx)
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
new Class
\series default
 'Pady)
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
new Class
\series default
 'State)
\end_layout

\begin_layout LyX-Code

\size scriptsize
\SpecialChar ldots

\end_layout

\begin_layout Standard
A widget description for a CheckButton then might look like:
\end_layout

\begin_layout LyX-Code

\size scriptsize
(Checkbutton (Name 'cbOptions)
\end_layout

\begin_layout LyX-Code

\size scriptsize
             (Text "Use Options")
\end_layout

\begin_layout LyX-Code

\size scriptsize
             (Variable "useOptions")
\end_layout

\begin_layout LyX-Code

\size scriptsize
             (State "normal")        ;or: (State "disabled")
\end_layout

\begin_layout LyX-Code

\size scriptsize
             (Width 12)              ;characters
\end_layout

\begin_layout LyX-Code

\size scriptsize
             (Command "cbtn-show")
\end_layout

\begin_layout LyX-Code

\size scriptsize
)
\end_layout

\begin_layout Standard
The option 
\family typewriter
\size scriptsize
(State 
\begin_inset Quotes qld
\end_inset

normal
\begin_inset Quotes qrd
\end_inset

)
\family default
\size default
 e.g.
 here is an anonymous object of class 
\family typewriter
\size scriptsize
'State
\family default
\size default
.
 There is a function 
\family typewriter
\series bold
\size scriptsize
ts:setw
\family default
\series default
\size default
 (SET Widget), which lets us define such a description:
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
ts:setw
\series default
 (Checkbutton (Name 'cbOptions) (Text "Use Options")
\end_layout

\begin_layout LyX-Code

\size scriptsize
                      (Variable "useOptions")
\end_layout

\begin_layout LyX-Code

\size scriptsize
                      (State "normal") ;(State "disabled")
\end_layout

\begin_layout LyX-Code

\size scriptsize
                      (Width 12) (Command "cbtn-show") ))
\end_layout

\begin_layout Standard
This function not only establishes the widget-description, but also creates
 a new 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
nL
\end_layout

\end_inset

-symbol from the Name-option given.
 In this example a 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
nL
\end_layout

\end_inset

-symbol with the name 
\family typewriter
\size scriptsize
cbOptions
\family default
\size default
 exists now and the widget-description shown, is assigned to it.
 Accessing one of it's options is done using the assoc-function:
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
assoc
\series default
 Width (
\series bold
self
\series default
)) 
\begin_inset Formula $\rightarrow$
\end_inset

 (Width 12)
\end_layout

\begin_layout Standard
giving the complete Width-object or
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
last
\series default
 (
\series bold
assoc
\series default
 Width (
\series bold
self
\series default
))) 
\begin_inset Formula $\rightarrow$
\end_inset

 12
\end_layout

\begin_layout Standard
if we need to get the value of Width.
 This is done within 
\family typewriter
\size scriptsize
ts.lsp
\family default
\size default
, when building a 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tcl
\end_layout

\end_inset

-string being sent to 
\family typewriter
\size scriptsize
wish
\family default
\size default
.
\end_layout

\begin_layout Subsection
Classes and SubClasses
\end_layout

\begin_layout Subsubsection
Window – Methods
\end_layout

\begin_layout Standard
All methods defined here are inherited to all subclasses, unless they define
 their own methods.
\end_layout

\begin_layout Paragraph

\family typewriter
Window:build
\end_layout

\begin_layout Standard
Status: May 11, 2024.
\end_layout

\begin_layout Description
syntax: 
\family typewriter
\size scriptsize
(:build 
\emph on
obj
\emph default
) 
\end_layout

\begin_layout Standard
This method builds the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tcl
\end_layout

\end_inset

-string being sent to the 
\family typewriter
\size scriptsize
wish
\family default
\size default
-server via 
\family typewriter
\size scriptsize
Tk.lsp
\family default
\size default
 using the given object 
\family typewriter
\size scriptsize
\emph on
obj
\family default
\size default
\emph default
.
 The example describes how 
\family typewriter
\size scriptsize
:build
\family default
\size default
 works with a main window object.
\end_layout

\begin_layout Description
Example:
\end_layout

\begin_layout LyX-Code

\size scriptsize
> (ts:setw (Window (Name 'win) ;main window
\end_layout

\begin_layout LyX-Code

\size scriptsize
                   (Title "backup")
\end_layout

\begin_layout LyX-Code

\size scriptsize
                   (Minsize (Width 720) (Height 250))))
\end_layout

\begin_layout LyX-Code

\size scriptsize
(Window (Name "win") (Title "backup") 
\backslash

\end_layout

\begin_layout LyX-Code

\size scriptsize
        (Minsize (Width 720) (Height 250)))
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code

\size scriptsize
> (:build win) ;will send it to Tk like this:
\end_layout

\begin_layout LyX-Code

\size scriptsize
wm title .
 "backup"
\end_layout

\begin_layout LyX-Code

\size scriptsize
wm minsize .
 720 250
\end_layout

\begin_layout Paragraph

\family typewriter
Window:build-tk-name
\end_layout

\begin_layout Standard
Status: May 13, 2024
\end_layout

\begin_layout Description
syntax 
\family typewriter
\size scriptsize
(:build-tk-name 
\emph on
obj
\emph default
)
\end_layout

\begin_layout Standard
Starting from 
\family typewriter
\size scriptsize
\emph on
obj
\family default
\size default
\emph default
, this method uses the Name and Parent information of the objects used in
 the Name-Parent-chain to build a name using the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tcl
\end_layout

\end_inset

-syntax.
 
\end_layout

\begin_layout Description
Example: Assuming a window, frame and a label is given, this method produces
 a 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tcl
\end_layout

\end_inset

-name:
\end_layout

\begin_layout LyX-Code

\size scriptsize
(ts:setw (Window (Name "
\series bold
win
\series default
") (Title "MyTitle")
\end_layout

\begin_layout LyX-Code

\size scriptsize
                 (Minsize (Width 100) (Height 50))))
\end_layout

\begin_layout LyX-Code

\size scriptsize
 
\end_layout

\begin_layout LyX-Code

\size scriptsize
> frm
\end_layout

\begin_layout LyX-Code

\size scriptsize
(Frame (
\series bold
Parent win
\series default
) (Name "
\series bold
frm
\series default
"))
\end_layout

\begin_layout LyX-Code

\size scriptsize
 
\end_layout

\begin_layout LyX-Code

\size scriptsize
> lbl
\end_layout

\begin_layout LyX-Code

\size scriptsize
(Label (
\series bold
Parent frm
\series default
) (Name "
\series bold
lb
\series default
l") (Text "Field 1"))
\end_layout

\begin_layout LyX-Code

\size scriptsize
 
\end_layout

\begin_layout LyX-Code

\series bold
\size scriptsize
> (:build-tk-name lbl)
\end_layout

\begin_layout LyX-Code

\series bold
\size scriptsize
".frm.lbl"                  ;--> 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tcl
\end_layout

\end_inset

-name
\end_layout

\begin_layout Standard
If the frame does not exist, but is named in the definition of the label,
 then the frame's name is used, but searching along the parent-name-chain
 is stopped here.
\end_layout

\begin_layout Paragraph

\family typewriter
Window:setgrid
\end_layout

\begin_layout Standard
Status: May 11, 2024
\end_layout

\begin_layout Description
syntax (:setgrid 
\emph on
obj obj-row obj-column
\emph default
 [
\emph on
obj-padx obj-pady
\emph default
])
\end_layout

\begin_layout Standard
This method adds a grid position to (self).
 This stored position will be unique: the last one given, will be used.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Notice: The order of the parameters are interchangeable.
\end_layout

\begin_layout Standard
Optionally there can be 
\family typewriter
\size scriptsize
padx
\family default
\size default
 and 
\family typewriter
\size scriptsize
pady
\family default
\size default
 pix-values given, in order to have some space around the widget.
 The `sticky`-option may also be used.
\end_layout

\begin_layout Description
example
\end_layout

\begin_layout LyX-Code

\size scriptsize
> (ts:setw (Label (Name 'lbl_quelle) (Text "Quelle"))) ;define label
\end_layout

\begin_layout LyX-Code

\size scriptsize
(Label (Name "lbl_quelle") (Text "Quelle"))
\end_layout

\begin_layout LyX-Code

\size scriptsize
 
\end_layout

\begin_layout LyX-Code

\size scriptsize
> (:setgrid lbl_quelle (Row 0) (Column 0) (Padx 5) (Pady 10))
\end_layout

\begin_layout Standard
This will lead to the following 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tcl
\end_layout

\end_inset

-string:
\end_layout

\begin_layout LyX-Code

\size scriptsize
"grid .lbl_quelle -row 0 -column 0 -padx 5 -pady 10"
\end_layout

\begin_layout Paragraph

\family typewriter
Window:delgrid
\end_layout

\begin_layout Standard
Status: May 11, 2024
\end_layout

\begin_layout Description
syntax 
\family typewriter
\size scriptsize
(:delgrid 
\emph on
obj
\emph default
)
\end_layout

\begin_layout Standard
Method 
\family typewriter
\size scriptsize
:delgrid
\family default
\size default
 deletes the grid position from 
\family typewriter
\size scriptsize
\emph on
obj
\family default
\size default
\emph default
.
\end_layout

\begin_layout Paragraph

\family typewriter
Window:import
\end_layout

\begin_layout Standard
Status: May 20, 2024
\end_layout

\begin_layout Description
syntax 
\family typewriter
\size scriptsize
(:import 
\emph on
obj pos str-file-name
\emph default
)
\end_layout

\begin_layout LyX-Code

\series bold
\size scriptsize
parameter
\family typewriter
\series default
 
\family default
\emph on
obj:
\family typewriter
\emph default
 widget (entry)
\end_layout

\begin_layout LyX-Code

\series bold
\size scriptsize
parameter
\family typewriter
\series default
 
\family default
\emph on
pos:
\family typewriter
\emph default
 position "0"...
 or "end"
\end_layout

\begin_layout LyX-Code

\series bold
\size scriptsize
parameter
\family typewriter
\series default
 
\family default
\emph on
str-file-name:
\family typewriter
\emph default
 string denoting a file path
\end_layout

\begin_layout LyX-Code

\family typewriter
\size scriptsize
 
\end_layout

\begin_layout Standard
Imports the content of a text file named in 
\family typewriter
\size scriptsize
\emph on
str-file-name
\family default
\size default
\emph default
 into the widget described by 
\family typewriter
\size scriptsize
\emph on
obj
\family default
\size default
\emph default
.
 Normally a 
\family typewriter
\size scriptsize
Scrolledtext
\family default
\size default
 area.
 
\end_layout

\begin_layout Description
example 
\end_layout

\begin_layout LyX-Code

\family typewriter
\size scriptsize
(:import tx "end" "readme.txt")
\end_layout

\begin_layout LyX-Code

\family typewriter
\size scriptsize
;; --> tcltk:  ".tx import 
\backslash
"readme.txt
\backslash
" end"
\end_layout

\begin_layout Paragraph

\family typewriter
Window:insert
\end_layout

\begin_layout Standard
Status: May 11, 2024
\end_layout

\begin_layout Description
syntax 
\family typewriter
\size scriptsize
(:insert 
\emph on
obj num-ind str-val
\emph default
)
\end_layout

\begin_layout Standard
Insert Text in 
\family typewriter
\size scriptsize
\emph on
str-val
\family default
\size default
\emph default
 into an Entry-widget 
\family typewriter
\size scriptsize
\emph on
obj
\family default
\size default
\emph default
, starting at position 
\family typewriter
\size scriptsize
\emph on
num-ind
\family default
\size default
\emph default
.
\end_layout

\begin_layout Description
example 
\end_layout

\begin_layout LyX-Code

\size scriptsize
(:insert line_edit_z 0 "Text")
\end_layout

\begin_layout Paragraph

\family typewriter
Window:erase
\end_layout

\begin_layout Standard
Status: May 11, 2024
\end_layout

\begin_layout Description
syntax 
\family typewriter
\size scriptsize
(:erase 
\emph on
obj num-from [num-to | 
\begin_inset Quotes qld
\end_inset

end
\begin_inset Quotes qrd
\end_inset

]
\emph default
)
\end_layout

\begin_layout Standard
Delete Text from an Entry-widget, starting at 
\family typewriter
\size scriptsize
\emph on
num-from
\family default
\size default
\emph default
 up to 
\family typewriter
\size scriptsize
\emph on
num-to
\family default
\size default
\emph default
 or the last position denoted by 
\family typewriter
\size scriptsize
\emph on

\begin_inset Quotes qld
\end_inset

end
\begin_inset Quotes qrd
\end_inset


\family default
\size default
\emph default
.
\end_layout

\begin_layout Description
example 
\end_layout

\begin_layout LyX-Code

\size scriptsize
(:erase line_edit_q 0 "end")
\end_layout

\begin_layout Subsubsection
Label – Methods
\end_layout

\begin_layout Paragraph

\family typewriter
Label:build
\end_layout

\begin_layout Standard
Status: May 11, 2024
\end_layout

\begin_layout Description
syntax 
\family typewriter
\size scriptsize
(:build 
\emph on
obj
\emph default
)
\end_layout

\begin_layout Standard

\family typewriter
\size scriptsize
Label:build
\family default
\size default
 actually knows Name and Text options given with 
\family typewriter
\size scriptsize
\emph on
obj
\family default
\size default
\emph default
.
 This method overwrites the one defined in class 
\family typewriter
\size scriptsize
'Window
\family default
\size default
.
\end_layout

\begin_layout Description
example 
\end_layout

\begin_layout LyX-Code

\size scriptsize
> (ts:setw (Label (Name 'lbl_source) (Text "source")))
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code

\size scriptsize
> (:build lbl_source)
\end_layout

\begin_layout LyX-Code

\size scriptsize
ttk::label .lbl_source -text "source"
\end_layout

\begin_layout Subsubsection
Button – Methods
\end_layout

\begin_layout Paragraph

\family typewriter
Button:build
\end_layout

\begin_layout Standard
Status: May 11, 2024
\end_layout

\begin_layout Description
syntax 
\family typewriter
\size scriptsize
(:build 
\emph on
obj
\emph default
)
\end_layout

\begin_layout Standard

\family typewriter
\size scriptsize
Button:build
\family default
\size default
 actually knows Name, Text and Command options given with 
\family typewriter
\size scriptsize
\emph on
obj
\family default
\size default
\emph default
.
 This method overwrites the one defined in class 
\family typewriter
\size scriptsize
'Window
\family default
\size default
.
\end_layout

\begin_layout Description
example 
\end_layout

\begin_layout LyX-Code

\size scriptsize
> (ts:setw (Button (Name 'bt) (Text "Quit") (Command "puts (exit); exit")))
\end_layout

\begin_layout LyX-Code

\size scriptsize
(Button (Name "bt") (Text "Quit") (Command "puts (exit); exit"))
\end_layout

\begin_layout LyX-Code

\size scriptsize
 
\end_layout

\begin_layout LyX-Code

\size scriptsize
> (:build bt)
\end_layout

\begin_layout LyX-Code

\size scriptsize
"ttk::button .bt -text 
\backslash
"Quit
\backslash
" -command {puts (exit); exit}"
\end_layout

\begin_layout Subsubsection
Entry – Methods
\end_layout

\begin_layout Paragraph

\family typewriter
Entry:build
\end_layout

\begin_layout Standard
Status: May 11, 2024
\end_layout

\begin_layout Description
syntax 
\family typewriter
\size scriptsize
(:build 
\emph on
obj
\emph default
)
\end_layout

\begin_layout Standard

\family typewriter
\size scriptsize
Entry:build
\family default
\size default
 actually knows Name and Width (number of characters) options given with
 
\family typewriter
\size scriptsize
\emph on
obj
\family default
\size default
\emph default
.
 This method overwrites the one defined in class 
\family typewriter
\size scriptsize
'Window
\family default
\size default
.
\end_layout

\begin_layout Description
example 
\end_layout

\begin_layout LyX-Code

\size scriptsize
> (ts:setw (Entry (Name 'line_edit_q) (Width 40)))
\end_layout

\begin_layout LyX-Code

\size scriptsize
> line_edit_q
\end_layout

\begin_layout LyX-Code

\size scriptsize
(Entry (Name "line_edit_q") (Width 40))
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code

\size scriptsize
> (:build line_edit_q)
\end_layout

\begin_layout LyX-Code

\size scriptsize
"ttk::entry .line_edit_q -width 40" 
\end_layout

\begin_layout Subsubsection
Checkbutton – Methods
\end_layout

\begin_layout Standard
Status: May 11, 2024
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
new
\series default
 'Window 'Checkbutton)
\end_layout

\begin_layout Paragraph

\family typewriter
Checkbutton:build
\end_layout

\begin_layout Standard
Status: May 11, 2024
\end_layout

\begin_layout Description
syntax 
\family typewriter
\size scriptsize
(:build 
\emph on
obj
\emph default
)
\end_layout

\begin_layout Standard

\family typewriter
\size scriptsize
Checkbutton:build
\family default
\size default
 actually knows Name, Text, Variable, Width, State and Command options given
 with 
\family typewriter
\size scriptsize
\emph on
obj
\family default
\size default
\emph default
.
 This method overwrites the one defined in class 
\family typewriter
\size scriptsize
'Window
\family default
\size default
.
\end_layout

\begin_layout Description
example 
\end_layout

\begin_layout LyX-Code

\size scriptsize
(ts:setw (Checkbutton (Name 'cbtn) (Text "Expert Mode")
\end_layout

\begin_layout LyX-Code

\size scriptsize
                      (Command "hide_unhide_controls")))
\end_layout

\begin_layout LyX-Code

\size scriptsize
(:build cbtn)
\end_layout

\begin_layout LyX-Code

\size scriptsize
ttk::checkbutton .cbtn -text "Experten-Modus" 
\backslash

\end_layout

\begin_layout LyX-Code

\size scriptsize
            -command {puts 
\backslash
"(MAIN:hide_unhide_controls)
\backslash
"}
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code

\size scriptsize
(ts:setVar "useOptions" "0")
\end_layout

\begin_layout LyX-Code

\size scriptsize
(ts:setw (Checkbutton (Name 'cbOptions) (Text "Use Options")
\end_layout

\begin_layout LyX-Code

\size scriptsize
                      (Variable "useOptions")
\end_layout

\begin_layout LyX-Code

\size scriptsize
                      (State "normal") ;(State "disabled")
\end_layout

\begin_layout LyX-Code

\size scriptsize
                      (Width 12)
\end_layout

\begin_layout LyX-Code

\size scriptsize
                      (Command "cbtn-show")
\end_layout

\begin_layout LyX-Code

\size scriptsize
                      ))
\end_layout

\begin_layout LyX-Code

\size scriptsize
(:build cbOptions)
\end_layout

\begin_layout LyX-Code

\size scriptsize
ttk::checkbutton .cbOptions -text "Use Options" -variable useOptions 
\backslash

\end_layout

\begin_layout LyX-Code

\size scriptsize
          -width 12 -state normal -command {puts "(MAIN:cbtn-show)"}
\end_layout

\begin_layout Paragraph

\family typewriter
Checkbutton:select-it
\end_layout

\begin_layout Description
syntax 
\family typewriter
\size scriptsize
(:select-it 
\emph on
obj
\emph default
)
\end_layout

\begin_layout Standard
Select the Checkbutton described in 
\family typewriter
\size scriptsize
\emph on
obj
\family default
\size default
\emph default
.
 As shown in the above example (
\family typewriter
\size scriptsize
Checkbutton:build
\family default
\size default
), this requires a variable bound to that button using a Tk-variable – see
 section 
\begin_inset CommandInset ref
LatexCommand nameref
reference "subsec:Tk-variables"
plural "false"
caps "false"
noprefix "false"

\end_inset

 
\begin_inset CommandInset ref
LatexCommand vpageref
reference "subsec:Tk-variables"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Paragraph

\family typewriter
Checkbutton:deselect-it
\end_layout

\begin_layout Standard
Status: May 11, 2024
\end_layout

\begin_layout Description
syntax 
\family typewriter
\size scriptsize
(:deselect-it 
\emph on
obj
\emph default
)
\end_layout

\begin_layout Standard
Deselect the Checkbutton described in 
\family typewriter
\size scriptsize
\emph on
obj
\family default
\size default
\emph default
.
 This requires a variable bound to that button using a Tk-variable – see
 section 
\begin_inset CommandInset ref
LatexCommand nameref
reference "subsec:Tk-variables"
plural "false"
caps "false"
noprefix "false"

\end_inset

 
\begin_inset CommandInset ref
LatexCommand vpageref
reference "subsec:Tk-variables"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Description
example 
\end_layout

\begin_layout LyX-Code

\size scriptsize
(ts:setw (Checkbutton (Name 'cbOptions) (Text "Use Options")
\end_layout

\begin_layout LyX-Code

\size scriptsize
                      (Variable "useOptions")
\end_layout

\begin_layout LyX-Code

\size scriptsize
\SpecialChar ldots

\end_layout

\begin_layout LyX-Code

\size scriptsize
))
\end_layout

\begin_layout LyX-Code

\size scriptsize
(:deselect-it cbOptions)
\end_layout

\begin_layout LyX-Code

\size scriptsize
\begin_inset Quotes qld
\end_inset

set useOptions 0
\begin_inset Quotes qrd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Subsubsection
Labelframe – Methods
\end_layout

\begin_layout Standard
Status: May 11, 2024
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
new
\series default
 'Window 'Labelframe)
\end_layout

\begin_layout Paragraph

\family typewriter
Labelframe:build
\end_layout

\begin_layout Standard
Status: May 11, 2024
\end_layout

\begin_layout Standard
Builds a frame with a label attached to it, to hold other widgets.
\end_layout

\begin_layout Description
syntax 
\family typewriter
\size scriptsize
(:build 
\emph on
obj
\emph default
)
\end_layout

\begin_layout Description
example 
\end_layout

\begin_layout LyX-Code

\size scriptsize
> (ts:setw (Labelframe (Name 'lf) (Text "Optionen")
\end_layout

\begin_layout LyX-Code

\size scriptsize
                       (Width 20) (Height 100)
\end_layout

\begin_layout LyX-Code

\size scriptsize
                       (Labelanchor "nw")))
\end_layout

\begin_layout LyX-Code

\size scriptsize
(Labelframe (Name "lf") (Text "Optionen") 
\backslash

\end_layout

\begin_layout LyX-Code

\size scriptsize
            (Width 20) (Height 100) 
\backslash

\end_layout

\begin_layout LyX-Code

\size scriptsize
            (Labelanchor "nw"))
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code

\size scriptsize
> (:build lf)
\end_layout

\begin_layout LyX-Code

\size scriptsize
"ttk::labelframe .lf -text 
\backslash
"Optionen
\backslash
" 
\backslash

\backslash

\end_layout

\begin_layout LyX-Code

\size scriptsize
                     -width 20 -height 100 -labelanchor nw"
\end_layout

\begin_layout Subsubsection
Not yet done
\end_layout

\begin_layout Itemize
(new 'Window 'Frame)
\end_layout

\begin_layout Itemize
(new 'Window 'Radiobutton)
\end_layout

\begin_layout Itemize
(new 'Window 'Menubutton)
\end_layout

\begin_layout Itemize
(new 'Window 'Listbox)
\end_layout

\begin_layout Itemize
(new 'Window 'Combobox)
\end_layout

\begin_layout Itemize
(new 'Window 'Notebook) 
\end_layout

\begin_layout Itemize
\SpecialChar ldots

\end_layout

\begin_layout Subsection
Functions
\end_layout

\begin_layout Subsubsection
ts:ask-directory
\end_layout

\begin_layout Standard
Use the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tcl
\end_layout

\end_inset


\family typewriter
\size scriptsize
-tk_chooseDirectory
\family default
\size default
-dialog to ask for a directory-path.
 Returns the path name of the directory chosen:
\end_layout

\begin_layout LyX-Code

\size scriptsize
> (
\series bold
setq
\series default
 source-dir (ts:ask-directory)) ;--> 
\begin_inset Quotes qld
\end_inset

/home/paul/share/newLISP-Tk
\begin_inset Quotes qrd
\end_inset


\end_layout

\begin_layout Subsubsection
ts:quit
\end_layout

\begin_layout Standard
It just sends a
\end_layout

\begin_layout LyX-Code

\size scriptsize
(Tk "puts 
\backslash
"(exit)
\backslash
"; exit")
\end_layout

\begin_layout Standard
to 
\family typewriter
\size scriptsize
wish
\family default
\size default
, stopping the application.
\end_layout

\begin_layout Subsubsection
ts:setw
\end_layout

\begin_layout Description
syntax 
\family typewriter
\size scriptsize
(ts:setw 
\emph on
obj-widget-definition
\emph default
)
\end_layout

\begin_layout Standard
The 
\family typewriter
\size scriptsize
\emph on
obj-widget-definition
\family default
\size default
\emph default
 contains a list of nested objects.
 Method 
\family typewriter
\size scriptsize
ts:setw
\family default
\size default
 "set widget" creates a newLISP symbol derived from the parameter given
 as 
\family typewriter
\size scriptsize
(Name 
\emph on
name
\emph default
)
\family default
\size default
, holding the 
\family typewriter
\size scriptsize
\emph on
obj-\SpecialChar softhyphen
widget-\SpecialChar softhyphen
definition.
\end_layout

\begin_layout Description
example
\end_layout

\begin_layout LyX-Code

\size scriptsize
;; define a label with name "lb1"
\end_layout

\begin_layout LyX-Code

\size scriptsize
> (
\series bold
ts:setw
\series default
 (Label (
\series bold
Name "lb1"
\series default
) (Text "Feld 1")))
\end_layout

\begin_layout LyX-Code

\size scriptsize
(Label (Name "lb1") (Text "Feld 1"))
\end_layout

\begin_layout LyX-Code

\size scriptsize
 
\end_layout

\begin_layout LyX-Code

\size scriptsize
> lb1 ; a new newLISP-variable
\end_layout

\begin_layout LyX-Code

\size scriptsize
(Label (Name "lb1") (Text "Feld 1"))
\end_layout

\begin_layout Subsubsection
ts:setVar & ts:getVar
\end_layout

\begin_layout Standard
– see section 
\begin_inset CommandInset ref
LatexCommand nameref
reference "subsec:Tk-variables"
plural "false"
caps "false"
noprefix "false"

\end_inset

–
\end_layout

\begin_layout Standard
<<<<<<<<<<<
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
today
\end_layout

\end_inset

>>>>>>>>>>>>>>
\end_layout

\begin_layout Subsection
Tk-variables
\begin_inset CommandInset label
LatexCommand label
name "subsec:Tk-variables"

\end_inset


\end_layout

\begin_layout Standard
Status: May 10, 2024
\end_layout

\begin_layout Standard
Certain Widgets use 
\series bold
\emph on
Tk-variables
\series default
\emph default

\begin_inset Index idx
status open

\begin_layout Plain Layout
Tk-variables
\end_layout

\end_inset

 to hold their state.
 A 
\family typewriter
\size footnotesize
checkbutton
\family default
\size default
 for instance has two states, 
\family typewriter
\size footnotesize
selected
\family default
\size default
 (represented as an integer=1) and 
\family typewriter
\size footnotesize
deselected
\family default
\size default
 (represented as an integer=0).
 In order to store, retrieve and manage such Tk-variables we need to be
 able to read\SpecialChar breakableslash
write these variables.
 Once they get connected to widgets, the connection should work both ways:
 if the variable changes, the value of the widget should also get updated
 with the new value.
 Using a variable which holds the state of the widget, enables us to change
 it from anywhere in our program.
\end_layout

\begin_layout Standard
The module 
\family typewriter
\size footnotesize
ts.lsp
\family default
\size default
 creates a hash-table 
\family typewriter
\size footnotesize
TkVar
\family default
\size default
 to hold those variables: 
\begin_inset Note Note
status open

\begin_layout Plain Layout
LyX-Code, Größe: sehr klein
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
define
\series default
 TkVar:TkVar)        ;create a hash-table, holding all Tk-variables
\end_layout

\begin_layout Subsubsection
ts:setVar
\end_layout

\begin_layout Standard
Status: May 17, 2024
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
define
\series default
 (ts:setVar name val)
\end_layout

\begin_layout LyX-Code

\size scriptsize
   "send name and set it's value to `val` "
\end_layout

\begin_layout LyX-Code

\size scriptsize
   (
\series bold
if
\series default
 (
\series bold
not
\series default
 (
\series bold
and
\series default
 (
\series bold
string?
\series default
 name) (
\series bold
string?
\series default
 val)))
\end_layout

\begin_layout LyX-Code

\size scriptsize
       (
\series bold
throw-error
\series default
 "ts:setVar arguments must both be of type string"))
\end_layout

\begin_layout LyX-Code

\size scriptsize
   (TkVar name val)                     ;now we know it's value
\end_layout

\begin_layout LyX-Code

\size scriptsize
   (Tk "set " name " " val)             ;send it to Tk
\end_layout

\begin_layout LyX-Code

\size scriptsize
   );ts:setVar
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
clearpage
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
ts:getVar
\end_layout

\begin_layout Standard
Status: May 19, 2024 – o.k.
\end_layout

\begin_layout Description
syntax 
\family typewriter
\size scriptsize
(ts:getVar 
\emph on
str-name
\emph default
)
\end_layout

\begin_layout Standard
Send a variable name and get it's actual value from Tk.
 ts:getVar: 
\emph on
str-name
\emph default
 must be a string.
\end_layout

\begin_layout Description
example
\end_layout

\begin_layout LyX-Code

\size scriptsize
(
\series bold
setq
\series default
 checked (ts:getVar "cbtn_expert_var"))
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
cleardoublepage{}
\end_layout

\end_inset


\end_layout

\begin_layout Section
msg.lsp
\end_layout

\begin_layout Section
next
\end_layout

\begin_layout Itemize
complete 
\family typewriter
\size scriptsize
msg.lsp
\end_layout

\begin_layout Itemize
add more widgets and options
\end_layout

\begin_layout Itemize
add more examples using the available widgets
\end_layout

\begin_deeper
\begin_layout Itemize
☒ Label
\end_layout

\begin_layout Itemize
☐ Entry 
\end_layout

\begin_layout Itemize
☒ Button
\end_layout

\begin_layout Itemize
☒ Scrolledtext (using Frame)
\end_layout

\begin_layout Itemize
☒ demo using a messagebox
\end_layout

\begin_layout Itemize
☐ Checkbutton
\end_layout

\begin_layout Itemize
☐ Labelframe
\end_layout

\end_deeper
\begin_layout Standard
Not yet done:
\end_layout

\begin_layout Itemize
widgets
\end_layout

\begin_deeper
\begin_layout Itemize
Radiobutton
\end_layout

\begin_layout Itemize
Menubutton
\end_layout

\begin_layout Itemize
Listbox
\end_layout

\begin_layout Itemize
Combobox
\end_layout

\begin_layout Itemize
Notebook
\end_layout

\end_deeper
\begin_layout Itemize
options:
\end_layout

\begin_deeper
\begin_layout Itemize
justify
\end_layout

\end_deeper
\begin_layout Itemize
try to make it run on the Windows10 platform
\end_layout

\begin_layout Section*
.
\end_layout

\begin_layout Standard
\begin_inset CommandInset index_print
LatexCommand printindex
type "idx"
name "Index"

\end_inset


\end_layout

\end_body
\end_document
